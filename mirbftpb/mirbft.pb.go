// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mirbft.proto

package mirbftpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Msg struct {
	// Types that are valid to be assigned to Type:
	//	*Msg_Preprepare
	//	*Msg_Prepare
	//	*Msg_Commit
	//	*Msg_Forward
	//	*Msg_Checkpoint
	//	*Msg_Suspect
	//	*Msg_EpochChange
	Type                 isMsg_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{0}
}
func (m *Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg.Unmarshal(m, b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
}
func (dst *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(dst, src)
}
func (m *Msg) XXX_Size() int {
	return xxx_messageInfo_Msg.Size(m)
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

type isMsg_Type interface {
	isMsg_Type()
}

type Msg_Preprepare struct {
	Preprepare *Preprepare `protobuf:"bytes,1,opt,name=preprepare,proto3,oneof"`
}

type Msg_Prepare struct {
	Prepare *Prepare `protobuf:"bytes,2,opt,name=prepare,proto3,oneof"`
}

type Msg_Commit struct {
	Commit *Commit `protobuf:"bytes,3,opt,name=commit,proto3,oneof"`
}

type Msg_Forward struct {
	Forward *Forward `protobuf:"bytes,4,opt,name=forward,proto3,oneof"`
}

type Msg_Checkpoint struct {
	Checkpoint *Checkpoint `protobuf:"bytes,5,opt,name=checkpoint,proto3,oneof"`
}

type Msg_Suspect struct {
	Suspect *Suspect `protobuf:"bytes,6,opt,name=suspect,proto3,oneof"`
}

type Msg_EpochChange struct {
	EpochChange *EpochChange `protobuf:"bytes,7,opt,name=epoch_change,json=epochChange,proto3,oneof"`
}

func (*Msg_Preprepare) isMsg_Type() {}

func (*Msg_Prepare) isMsg_Type() {}

func (*Msg_Commit) isMsg_Type() {}

func (*Msg_Forward) isMsg_Type() {}

func (*Msg_Checkpoint) isMsg_Type() {}

func (*Msg_Suspect) isMsg_Type() {}

func (*Msg_EpochChange) isMsg_Type() {}

func (m *Msg) GetType() isMsg_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Msg) GetPreprepare() *Preprepare {
	if x, ok := m.GetType().(*Msg_Preprepare); ok {
		return x.Preprepare
	}
	return nil
}

func (m *Msg) GetPrepare() *Prepare {
	if x, ok := m.GetType().(*Msg_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (m *Msg) GetCommit() *Commit {
	if x, ok := m.GetType().(*Msg_Commit); ok {
		return x.Commit
	}
	return nil
}

func (m *Msg) GetForward() *Forward {
	if x, ok := m.GetType().(*Msg_Forward); ok {
		return x.Forward
	}
	return nil
}

func (m *Msg) GetCheckpoint() *Checkpoint {
	if x, ok := m.GetType().(*Msg_Checkpoint); ok {
		return x.Checkpoint
	}
	return nil
}

func (m *Msg) GetSuspect() *Suspect {
	if x, ok := m.GetType().(*Msg_Suspect); ok {
		return x.Suspect
	}
	return nil
}

func (m *Msg) GetEpochChange() *EpochChange {
	if x, ok := m.GetType().(*Msg_EpochChange); ok {
		return x.EpochChange
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Msg) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Msg_OneofMarshaler, _Msg_OneofUnmarshaler, _Msg_OneofSizer, []interface{}{
		(*Msg_Preprepare)(nil),
		(*Msg_Prepare)(nil),
		(*Msg_Commit)(nil),
		(*Msg_Forward)(nil),
		(*Msg_Checkpoint)(nil),
		(*Msg_Suspect)(nil),
		(*Msg_EpochChange)(nil),
	}
}

func _Msg_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Msg)
	// type
	switch x := m.Type.(type) {
	case *Msg_Preprepare:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Preprepare); err != nil {
			return err
		}
	case *Msg_Prepare:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Prepare); err != nil {
			return err
		}
	case *Msg_Commit:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Commit); err != nil {
			return err
		}
	case *Msg_Forward:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Forward); err != nil {
			return err
		}
	case *Msg_Checkpoint:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Checkpoint); err != nil {
			return err
		}
	case *Msg_Suspect:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Suspect); err != nil {
			return err
		}
	case *Msg_EpochChange:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EpochChange); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Msg.Type has unexpected type %T", x)
	}
	return nil
}

func _Msg_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Msg)
	switch tag {
	case 1: // type.preprepare
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Preprepare)
		err := b.DecodeMessage(msg)
		m.Type = &Msg_Preprepare{msg}
		return true, err
	case 2: // type.prepare
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Prepare)
		err := b.DecodeMessage(msg)
		m.Type = &Msg_Prepare{msg}
		return true, err
	case 3: // type.commit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Commit)
		err := b.DecodeMessage(msg)
		m.Type = &Msg_Commit{msg}
		return true, err
	case 4: // type.forward
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Forward)
		err := b.DecodeMessage(msg)
		m.Type = &Msg_Forward{msg}
		return true, err
	case 5: // type.checkpoint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Checkpoint)
		err := b.DecodeMessage(msg)
		m.Type = &Msg_Checkpoint{msg}
		return true, err
	case 6: // type.suspect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Suspect)
		err := b.DecodeMessage(msg)
		m.Type = &Msg_Suspect{msg}
		return true, err
	case 7: // type.epoch_change
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EpochChange)
		err := b.DecodeMessage(msg)
		m.Type = &Msg_EpochChange{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Msg_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Msg)
	// type
	switch x := m.Type.(type) {
	case *Msg_Preprepare:
		s := proto.Size(x.Preprepare)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_Prepare:
		s := proto.Size(x.Prepare)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_Commit:
		s := proto.Size(x.Commit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_Forward:
		s := proto.Size(x.Forward)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_Checkpoint:
		s := proto.Size(x.Checkpoint)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_Suspect:
		s := proto.Size(x.Suspect)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_EpochChange:
		s := proto.Size(x.EpochChange)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Preprepare struct {
	SeqNo                uint64   `protobuf:"varint,1,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Bucket               uint64   `protobuf:"varint,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Batch                [][]byte `protobuf:"bytes,4,rep,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Preprepare) Reset()         { *m = Preprepare{} }
func (m *Preprepare) String() string { return proto.CompactTextString(m) }
func (*Preprepare) ProtoMessage()    {}
func (*Preprepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{1}
}
func (m *Preprepare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Preprepare.Unmarshal(m, b)
}
func (m *Preprepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Preprepare.Marshal(b, m, deterministic)
}
func (dst *Preprepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Preprepare.Merge(dst, src)
}
func (m *Preprepare) XXX_Size() int {
	return xxx_messageInfo_Preprepare.Size(m)
}
func (m *Preprepare) XXX_DiscardUnknown() {
	xxx_messageInfo_Preprepare.DiscardUnknown(m)
}

var xxx_messageInfo_Preprepare proto.InternalMessageInfo

func (m *Preprepare) GetSeqNo() uint64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *Preprepare) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *Preprepare) GetBucket() uint64 {
	if m != nil {
		return m.Bucket
	}
	return 0
}

func (m *Preprepare) GetBatch() [][]byte {
	if m != nil {
		return m.Batch
	}
	return nil
}

type Prepare struct {
	SeqNo                uint64   `protobuf:"varint,1,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Bucket               uint64   `protobuf:"varint,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Digest               []byte   `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Prepare) Reset()         { *m = Prepare{} }
func (m *Prepare) String() string { return proto.CompactTextString(m) }
func (*Prepare) ProtoMessage()    {}
func (*Prepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{2}
}
func (m *Prepare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prepare.Unmarshal(m, b)
}
func (m *Prepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prepare.Marshal(b, m, deterministic)
}
func (dst *Prepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prepare.Merge(dst, src)
}
func (m *Prepare) XXX_Size() int {
	return xxx_messageInfo_Prepare.Size(m)
}
func (m *Prepare) XXX_DiscardUnknown() {
	xxx_messageInfo_Prepare.DiscardUnknown(m)
}

var xxx_messageInfo_Prepare proto.InternalMessageInfo

func (m *Prepare) GetSeqNo() uint64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *Prepare) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *Prepare) GetBucket() uint64 {
	if m != nil {
		return m.Bucket
	}
	return 0
}

func (m *Prepare) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

type Commit struct {
	SeqNo                uint64   `protobuf:"varint,1,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Bucket               uint64   `protobuf:"varint,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Digest               []byte   `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{3}
}
func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (dst *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(dst, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetSeqNo() uint64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *Commit) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *Commit) GetBucket() uint64 {
	if m != nil {
		return m.Bucket
	}
	return 0
}

func (m *Commit) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

type Checkpoint struct {
	SeqNo                uint64   `protobuf:"varint,1,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Checkpoint) Reset()         { *m = Checkpoint{} }
func (m *Checkpoint) String() string { return proto.CompactTextString(m) }
func (*Checkpoint) ProtoMessage()    {}
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{4}
}
func (m *Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checkpoint.Unmarshal(m, b)
}
func (m *Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checkpoint.Marshal(b, m, deterministic)
}
func (dst *Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checkpoint.Merge(dst, src)
}
func (m *Checkpoint) XXX_Size() int {
	return xxx_messageInfo_Checkpoint.Size(m)
}
func (m *Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Checkpoint proto.InternalMessageInfo

func (m *Checkpoint) GetSeqNo() uint64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *Checkpoint) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Forward struct {
	Epoch                uint64   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Bucket               uint64   `protobuf:"varint,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Forward) Reset()         { *m = Forward{} }
func (m *Forward) String() string { return proto.CompactTextString(m) }
func (*Forward) ProtoMessage()    {}
func (*Forward) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{5}
}
func (m *Forward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Forward.Unmarshal(m, b)
}
func (m *Forward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Forward.Marshal(b, m, deterministic)
}
func (dst *Forward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Forward.Merge(dst, src)
}
func (m *Forward) XXX_Size() int {
	return xxx_messageInfo_Forward.Size(m)
}
func (m *Forward) XXX_DiscardUnknown() {
	xxx_messageInfo_Forward.DiscardUnknown(m)
}

var xxx_messageInfo_Forward proto.InternalMessageInfo

func (m *Forward) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *Forward) GetBucket() uint64 {
	if m != nil {
		return m.Bucket
	}
	return 0
}

func (m *Forward) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Suspect struct {
	Epoch                uint64   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Suspect) Reset()         { *m = Suspect{} }
func (m *Suspect) String() string { return proto.CompactTextString(m) }
func (*Suspect) ProtoMessage()    {}
func (*Suspect) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{6}
}
func (m *Suspect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Suspect.Unmarshal(m, b)
}
func (m *Suspect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Suspect.Marshal(b, m, deterministic)
}
func (dst *Suspect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Suspect.Merge(dst, src)
}
func (m *Suspect) XXX_Size() int {
	return xxx_messageInfo_Suspect.Size(m)
}
func (m *Suspect) XXX_DiscardUnknown() {
	xxx_messageInfo_Suspect.DiscardUnknown(m)
}

var xxx_messageInfo_Suspect proto.InternalMessageInfo

func (m *Suspect) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

// EpochChange messages are used to implement the classical PBFT view-change
// protocol, (very) slightly modified to adapt to Mir.  The assorted sets
// are encoded as repeated fields, rather than as maps for ease of serialization
// and particularly for computing a digest to attest to.  If any set contains
// a duplicated entry, the message may be discarded as byzantine.
type EpochChange struct {
	// attestation should be a signature covering the remainder of the fields
	// in the message.  additional information may optionally be encoded in the
	// attestation.
	Attestation []byte `protobuf:"bytes,1,opt,name=attestation,proto3" json:"attestation,omitempty"`
	NewEpoch    uint64 `protobuf:"varint,2,opt,name=new_epoch,json=newEpoch,proto3" json:"new_epoch,omitempty"`
	// c_set contains the entries for the C-set as defined by the classical
	// PBFT view-change protocol.
	Checkpoints []*EpochChange_Checkpoint `protobuf:"bytes,3,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
	// p_set contains the entries for the P-set as defined by the classical
	// PBFT view-change protocol.
	PSet []*EpochChange_SetEntry `protobuf:"bytes,4,rep,name=p_set,json=pSet,proto3" json:"p_set,omitempty"`
	// q_set contains the entries for the Q-set as defined by the classical
	// PBFT view-change protocol.
	QSet                 []*EpochChange_SetEntry `protobuf:"bytes,5,rep,name=q_set,json=qSet,proto3" json:"q_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *EpochChange) Reset()         { *m = EpochChange{} }
func (m *EpochChange) String() string { return proto.CompactTextString(m) }
func (*EpochChange) ProtoMessage()    {}
func (*EpochChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{7}
}
func (m *EpochChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpochChange.Unmarshal(m, b)
}
func (m *EpochChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpochChange.Marshal(b, m, deterministic)
}
func (dst *EpochChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochChange.Merge(dst, src)
}
func (m *EpochChange) XXX_Size() int {
	return xxx_messageInfo_EpochChange.Size(m)
}
func (m *EpochChange) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochChange.DiscardUnknown(m)
}

var xxx_messageInfo_EpochChange proto.InternalMessageInfo

func (m *EpochChange) GetAttestation() []byte {
	if m != nil {
		return m.Attestation
	}
	return nil
}

func (m *EpochChange) GetNewEpoch() uint64 {
	if m != nil {
		return m.NewEpoch
	}
	return 0
}

func (m *EpochChange) GetCheckpoints() []*EpochChange_Checkpoint {
	if m != nil {
		return m.Checkpoints
	}
	return nil
}

func (m *EpochChange) GetPSet() []*EpochChange_SetEntry {
	if m != nil {
		return m.PSet
	}
	return nil
}

func (m *EpochChange) GetQSet() []*EpochChange_SetEntry {
	if m != nil {
		return m.QSet
	}
	return nil
}

type EpochChange_Checkpoint struct {
	SeqNo                uint64   `protobuf:"varint,1,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EpochChange_Checkpoint) Reset()         { *m = EpochChange_Checkpoint{} }
func (m *EpochChange_Checkpoint) String() string { return proto.CompactTextString(m) }
func (*EpochChange_Checkpoint) ProtoMessage()    {}
func (*EpochChange_Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{7, 0}
}
func (m *EpochChange_Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpochChange_Checkpoint.Unmarshal(m, b)
}
func (m *EpochChange_Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpochChange_Checkpoint.Marshal(b, m, deterministic)
}
func (dst *EpochChange_Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochChange_Checkpoint.Merge(dst, src)
}
func (m *EpochChange_Checkpoint) XXX_Size() int {
	return xxx_messageInfo_EpochChange_Checkpoint.Size(m)
}
func (m *EpochChange_Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochChange_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_EpochChange_Checkpoint proto.InternalMessageInfo

func (m *EpochChange_Checkpoint) GetSeqNo() uint64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *EpochChange_Checkpoint) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type EpochChange_SetEntry struct {
	Bucket               uint64   `protobuf:"varint,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	SeqNo                uint64   `protobuf:"varint,3,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Digest               []byte   `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EpochChange_SetEntry) Reset()         { *m = EpochChange_SetEntry{} }
func (m *EpochChange_SetEntry) String() string { return proto.CompactTextString(m) }
func (*EpochChange_SetEntry) ProtoMessage()    {}
func (*EpochChange_SetEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_mirbft_ce584394f7ea0875, []int{7, 1}
}
func (m *EpochChange_SetEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpochChange_SetEntry.Unmarshal(m, b)
}
func (m *EpochChange_SetEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpochChange_SetEntry.Marshal(b, m, deterministic)
}
func (dst *EpochChange_SetEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochChange_SetEntry.Merge(dst, src)
}
func (m *EpochChange_SetEntry) XXX_Size() int {
	return xxx_messageInfo_EpochChange_SetEntry.Size(m)
}
func (m *EpochChange_SetEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochChange_SetEntry.DiscardUnknown(m)
}

var xxx_messageInfo_EpochChange_SetEntry proto.InternalMessageInfo

func (m *EpochChange_SetEntry) GetBucket() uint64 {
	if m != nil {
		return m.Bucket
	}
	return 0
}

func (m *EpochChange_SetEntry) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *EpochChange_SetEntry) GetSeqNo() uint64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *EpochChange_SetEntry) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

func init() {
	proto.RegisterType((*Msg)(nil), "mirbftpb.Msg")
	proto.RegisterType((*Preprepare)(nil), "mirbftpb.Preprepare")
	proto.RegisterType((*Prepare)(nil), "mirbftpb.Prepare")
	proto.RegisterType((*Commit)(nil), "mirbftpb.Commit")
	proto.RegisterType((*Checkpoint)(nil), "mirbftpb.Checkpoint")
	proto.RegisterType((*Forward)(nil), "mirbftpb.Forward")
	proto.RegisterType((*Suspect)(nil), "mirbftpb.Suspect")
	proto.RegisterType((*EpochChange)(nil), "mirbftpb.EpochChange")
	proto.RegisterType((*EpochChange_Checkpoint)(nil), "mirbftpb.EpochChange.Checkpoint")
	proto.RegisterType((*EpochChange_SetEntry)(nil), "mirbftpb.EpochChange.SetEntry")
}

func init() { proto.RegisterFile("mirbft.proto", fileDescriptor_mirbft_ce584394f7ea0875) }

var fileDescriptor_mirbft_ce584394f7ea0875 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0xdd, 0x36, 0x5f, 0xf5, 0x26, 0x0f, 0x3a, 0xec, 0x2e, 0x61, 0x05, 0x0d, 0x79, 0x2a, 0x82,
	0x7d, 0xe8, 0x82, 0xa0, 0x8f, 0x5b, 0x56, 0x0a, 0xa2, 0x2c, 0xd3, 0x1f, 0x50, 0x92, 0xf4, 0x36,
	0x0d, 0x6b, 0x93, 0x34, 0x73, 0x6b, 0xd9, 0x3f, 0xe3, 0x8f, 0xf4, 0x17, 0xc8, 0xcc, 0xa4, 0x3b,
	0xd9, 0x12, 0x45, 0x44, 0xa1, 0x0f, 0x3d, 0x73, 0xcf, 0xb9, 0x67, 0xe6, 0xde, 0x43, 0x20, 0xd8,
	0x16, 0x4d, 0xba, 0xa6, 0x49, 0xdd, 0x54, 0x54, 0xb1, 0x91, 0x46, 0x75, 0x1a, 0xff, 0x18, 0x82,
	0xf5, 0x59, 0xe4, 0xec, 0x1d, 0x40, 0xdd, 0xa0, 0xfc, 0x25, 0x0d, 0x86, 0x83, 0x68, 0x30, 0xf6,
	0xa7, 0xe7, 0x93, 0x23, 0x6d, 0x72, 0xf7, 0x58, 0x9b, 0x9f, 0xf1, 0x0e, 0x93, 0xbd, 0x05, 0xef,
	0x28, 0x1a, 0x2a, 0xd1, 0x8b, 0xa7, 0x22, 0xad, 0x38, 0x72, 0xd8, 0x1b, 0x70, 0xb3, 0x6a, 0xbb,
	0x2d, 0x28, 0xb4, 0x14, 0xfb, 0xb9, 0x61, 0xcf, 0xd4, 0xf9, 0xfc, 0x8c, 0xb7, 0x0c, 0xd9, 0x7a,
	0x5d, 0x35, 0x87, 0xa4, 0x59, 0x85, 0xf6, 0x69, 0xeb, 0x8f, 0xba, 0x20, 0x5b, 0xb7, 0x1c, 0xf9,
	0x82, 0x6c, 0x83, 0xd9, 0x7d, 0x5d, 0x15, 0x25, 0x85, 0xce, 0xe9, 0x0b, 0x66, 0x8f, 0x35, 0xf9,
	0x02, 0xc3, 0x94, 0x36, 0x62, 0x2f, 0x6a, 0xcc, 0x28, 0x74, 0x4f, 0x6d, 0x16, 0xba, 0x20, 0x6d,
	0x5a, 0x0e, 0xfb, 0x00, 0x01, 0xd6, 0x55, 0xb6, 0x59, 0x66, 0x9b, 0xa4, 0xcc, 0x31, 0xf4, 0x94,
	0xe6, 0xc2, 0x68, 0x6e, 0x65, 0x75, 0xa6, 0x8a, 0xf3, 0x33, 0xee, 0xa3, 0x81, 0x37, 0x2e, 0xd8,
	0xf4, 0x50, 0x63, 0x9c, 0x03, 0x98, 0x81, 0xb2, 0x0b, 0x70, 0x05, 0xee, 0x96, 0x65, 0xa5, 0xc6,
	0x6e, 0x73, 0x47, 0xe0, 0xee, 0x4b, 0xc5, 0xce, 0xc1, 0x51, 0x5a, 0x35, 0x57, 0x9b, 0x6b, 0xc0,
	0x2e, 0xc1, 0x4d, 0xf7, 0xd9, 0x3d, 0xea, 0x01, 0xda, 0xbc, 0x45, 0x92, 0x9d, 0x26, 0x94, 0x6d,
	0x42, 0x3b, 0xb2, 0xc6, 0x01, 0xd7, 0x20, 0x5e, 0x83, 0x77, 0xf7, 0x2f, 0x5d, 0x2e, 0xc1, 0x5d,
	0x15, 0x39, 0x0a, 0x52, 0x1b, 0x09, 0x78, 0x8b, 0x62, 0x04, 0x57, 0xaf, 0xef, 0xff, 0xda, 0xbc,
	0x07, 0x30, 0x6b, 0xfc, 0x8d, 0xd5, 0xb7, 0xe4, 0xeb, 0x5e, 0xe7, 0x31, 0xe0, 0x1a, 0xc4, 0x9f,
	0xc0, 0x6b, 0x33, 0x63, 0xee, 0x32, 0xe8, 0xbf, 0xcb, 0xf0, 0xc9, 0x5d, 0x18, 0xd8, 0xab, 0x84,
	0x12, 0x75, 0xc3, 0x80, 0xab, 0xff, 0xf1, 0x6b, 0xf0, 0xda, 0x64, 0xf4, 0x37, 0x8b, 0xbf, 0x5b,
	0xe0, 0x77, 0x72, 0xc0, 0x22, 0xf0, 0x13, 0x22, 0x14, 0x94, 0x50, 0x51, 0x95, 0x8a, 0x1b, 0xf0,
	0xee, 0x11, 0x7b, 0x09, 0xcf, 0x4a, 0x3c, 0x2c, 0xbb, 0x43, 0x1a, 0x95, 0x78, 0x50, 0x4d, 0xd8,
	0x0d, 0xf8, 0x26, 0xb0, 0x22, 0xb4, 0x22, 0x6b, 0xec, 0x4f, 0xa3, 0xde, 0xc8, 0x75, 0x72, 0xce,
	0xbb, 0x22, 0x76, 0x0d, 0x4e, 0xbd, 0x14, 0x48, 0x2a, 0x20, 0xfe, 0xf4, 0x55, 0xbf, 0x7a, 0x81,
	0x74, 0x5b, 0x52, 0xf3, 0xc0, 0xed, 0x7a, 0x81, 0x24, 0x45, 0x3b, 0x25, 0x72, 0xfe, 0x4c, 0xb4,
	0x5b, 0x20, 0x5d, 0xfd, 0xfd, 0x96, 0xae, 0x72, 0x18, 0x1d, 0x9b, 0x75, 0x16, 0x32, 0x38, 0x4d,
	0x7a, 0x4f, 0x94, 0x8c, 0x8d, 0xd5, 0xb5, 0xf9, 0x45, 0x92, 0x52, 0x57, 0x7d, 0x07, 0xaf, 0x7f,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xed, 0x32, 0x9b, 0x17, 0x05, 0x00, 0x00,
}
